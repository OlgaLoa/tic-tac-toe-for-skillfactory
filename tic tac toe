def show (): #задаем функцию рисования поля
    print (f" 0 1 2") #показываем индексы, верхняя часть поля
    for i in range (3): #рисуем строки
        print (f"{i} {field[i][0]} {field[i][1]} {field[i][2]}")#выводим поле, где элементы поля-пробелы
#создаем взаимодействие с игроками (спрашиваем координаты)
def ask():
    while True: #создаем бесконечный цикл
        x,y=map(int, input("Ваш ход:".split()))#разделяем вводимые символы и преобразуем в числа
        if 0<=x<=2 and 0<=y<=2: #проверяем попадает введенное значение в диапазон координат
            if field[x][y]==" ":#проверяем пустая ли клеточка
                return x,y # при выполнении обоих условий возвращаем введенные значения
            else:
                print("Клеточка занята")
        else:
            print("Координаты вне диапазона")

#ввод данных игроками
num=0 #переменная для хранения количества ходов
while True:
    num+=1 #считаем количество, прибавляя в цикле по 1
    show()#т.к. нужно выводить игровое поле
    #проверяем на четность ход, где нечетный -X, четный -O
    if num % 2 == 1:
        print("Ходит X")
    else:
        print("Ходит O")
    x,y = ask() #спрашивает координаты через ф-ию ask и возвращает кортеж

    if num % 2 == 1:
        field[x][y]="Х" #записываем в клеточку значение, если вводит нечетный
    else:
        field[x][y] = "O" #записываем в клеточку значение, если вводит четный

    if check_win():
        break

    if num == 9:#максимальное количество возможных ходов
        print("Игра сыграна в ничью")
        break
    break

#проверка выигрышных координат
def check_win():
    win_cord =[((0,0),(0,1),(0,2)),                      #1-3 элементы 1-ой строки
               ((1,0),(1,1),(1,2)),                      #1-3 элементы 2-ой строки
               ((2,0),(2,1),(2,2)),                      #1-3 элементы 2-ой строки
               ((0,2),(1,1),(2,0)),                      #диагональ  спр-налево
               ((0,0),(1,1),(2,2)),                      #диагональ  слв-нпр
               ((0,0),(1,0),(2,0)),                      #1-3 элементы 1-го столбца
               ((0,1),(1,1),(2,1)),                      #1-3 элементы 2-го столбца
               ((0,2),(1,2),(2,2))]                      #1-3 элементы 3-го столбца
    for cord in win_cord:
        a = cord[0] #1 точка
        b = cord[1] #2 точка
        c = cord[3] #3 точка

        if field [a[0]][a[1]] == field [b[0]][b[1]] == field [c[0]][c[1]] != " ":  #если знаки в этих коорд=ах равны и не равны пустоте
            print(f"Выиграл {field[a[0]][a[1]]}")
            return True
    return False

#создаем поле для игры
field = [[" "] * 3 for i in range (3)] #создаем поле через строку,где изначально пробел - элемент строки
count = 0
while True:
    count +=1
    show()
    if count % 2==1:
        print ("Ходит X")
    else:
        print("Ходит O")
    x,y = ask()
    if count % 2 == 1:
        field[x][y]="X"
    else:
        field[x][y] = "O"
    if check_win():
        break
    if count == 9:
        print("Ничья")
        break
